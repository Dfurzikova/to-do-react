{"version":3,"sources":["components/LongMenu.js","context/SettingsContext.js","components/Table.js","components/TaskTypes.js","components/TaskStatus.js","components/TaskTag.js","components/SaveWarning.js","components/Progress.js","components/Drawer.js","App.js","serviceWorker.js","context/SettingsProvider.js","index.js"],"names":["options","LongMenu","state","anchorEl","handleClick","event","_this","setState","currentTarget","handleClose","option","e","props","getStatus","_this2","this","open","Boolean","react_default","a","createElement","style","display","IconButton_default","aria-label","aria-owns","undefined","aria-haspopup","onClick","MoreVert_default","Menu_default","id","onClose","PaperProps","maxHeight","ITEM_HEIGHT","width","map","MenuItem_default","key","selected","bind","React","Component","createContext","CustomTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","root","marginTop","spacing","unit","overflowX","table","minWidth","row","&:nth-of-type(odd)","background","default","height","context","useContext","SettingsContext","classes","_useState","useState","_useState2","Object","slicedToArray","showEditIcons","setShowButtons","setOn","setOff","deleteArticle","deleteItem","editArticle","window","editItem","status","data","objectSpread","taskStatus","addItem","Paper_default","className","Table_default","TableHead_default","TableRow_default","align","TableBody_default","items","index","component","scope","components_LongMenu","name","description","date","taskType","taskTag","onMouseEnter","onMouseLeave","Fragment","size","Icon_default","Delete_default","renderIcon","RadioButtonsGroup","handleChange","getTaskType","target","value","FormControl_default","formControl","RadioGroup_default","group","onChange","FormControlLabel_default","control","Radio_default","label","margin","concat","SimpleSelect","age","labelWidth","getTaskStatus","defineProperty","autoComplete","InputLabel_default","shrink","htmlFor","Select_default","input","Input_default","displayEmpty","selectEmpty","flexWrap","suggestions","flexGrow","container","position","padding","paper","zIndex","left","right","chip","inputRoot","inputInput","divider","downshift_esm","_ref2","getInputProps","getItemProps","getMenuProps","highlightedIndex","inputValue","isOpen","selectedItem","getTaskTag","ListItemIcon_default","Mail_default","inputProps","InputProps","ref","other","objectWithoutProperties","TextField_default","assign","inputRef","renderInput","fullWidth","placeholder","square","deburr","trim","toLowerCase","inputLength","length","count","filter","suggestion","keep","slice","getSuggestions","_ref","itemProps","isHighlighted","isSelected","indexOf","fontWeight","renderSuggestion","item","close","setOpen","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","action","Button_default","Close_default","CircularDeterminate","completed","progress","timer","setInterval","clearInterval","center","CircularProgress_default","variant","top","transform","drawer","flexDirection","overflow","title","flex","drawerItem","textField","marginLeft","marginRight","footer","justifyContent","button","_ref$align","_useState3","_useState4","setName","_useState5","_useState6","setDescription","_useState7","_useState8","setDate","_useState9","_useState10","showRadioButtons","setShow","_useState11","_useState12","setTaskType","_useState13","_useState14","setTaskStatus","_useState15","_useState16","setTaskTag","_useState17","_useState18","warning","setRenderWarning","_useState19","_useState20","setProgres","_useState21","_useState22","setId","setters","Date","getTime","openSidebar","arguments","keys","forEach","setter","type","savedHandler","SwipeableDrawer_default","anchor","onOpen","Typography_default","Divider_default","List_default","ListItem_default","multiline","rowsMax","defaultValue","InputLabelProps","TaskTypes","TaskStatus","taskstatus","TaskTag","tasktag","Promise","res","setTimeout","then","Progress","renderProgress","SaveWarning","App","components_Drawer","components_Table","location","hostname","match","storage","localStorage","getItem","setItem","SettingsProvider","tableData","JSON","parse","setItems","Provider","newItems","toConsumableArray","sameIdIndex","findIndex","v","push","stringify","newData","article","children","ReactDOM","render","context_SettingsProvider","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15114dce.chunk.js","sourcesContent":["import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst options = ['Выполняется', 'На потом', 'Выполнена'];\n\nconst ITEM_HEIGHT = 48;\n\nclass LongMenu extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = (option, e) => {\n        this.props.getStatus(option)\n        this.setState({ anchorEl: null });\n    };\n\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        const style = {\n            display: 'inline',\n\n        };\n        return (\n            <div style={style}>\n                <IconButton\n                    aria-label=\"More\"\n                    aria-owns={open ? 'long-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={this.handleClick}\n                >\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id=\"long-menu\"\n                    anchorEl={anchorEl}\n                    open={open}\n                    onClose={this.handleClose}\n                    PaperProps={{\n                        style: {\n                            maxHeight: ITEM_HEIGHT * 4.5,\n                            width: 200,\n                        },\n                    }}\n                >\n                    {options.map(option => (\n                        <MenuItem key={option} selected={option === 'статус1'} onClick={this.handleClose.bind(this, option)}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nexport default LongMenu;","import React from 'react';\nexport default React.createContext({\n\n});","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useState } from 'react';\nimport LongMenu from './LongMenu';\nimport SettingsContext from '../context/SettingsContext';\n\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    }\n}))(TableCell);\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    row: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n            height: '70px',\n        },\n    },\n\n});\n\nfunction CustomizedTable(props) {\n    const context = useContext(SettingsContext);\n    const { classes } = props;\n    const [showEditIcons, setShowButtons] = useState(false);\n\n    const setOn = () => {\n        setShowButtons(true);\n    }\n\n    const setOff = () => {\n        setShowButtons(false);\n    }\n\n    const renderIcon = (row) => {\n        if (showEditIcons) {\n            return (\n                <>\n                    <IconButton size=\"small\" color=\"primary\" aria-label=\"Edit\" onClick={editArticle.bind(this, row)}>\n                        <Icon>edit_icon</Icon>\n                    </IconButton>\n                    <IconButton size=\"small\" color=\"secondary\" aria-label=\"Delete\" onClick={deleteArticle.bind(this, row)}>\n                        <DeleteIcon />\n                    </IconButton>\n                </>\n            )\n        } else {\n            return '';\n        }\n    }\n\n    const deleteArticle = (row) => {\n        context.deleteItem(row);\n    }\n\n    const editArticle = (row, e) => {\n        window.editItem(row);\n    }\n\n    const getStatus = (row, status) => {\n        const data = { ...row };\n        data.taskStatus = status;\n        context.addItem(data);\n    }\n    // if(context.items) {\n    //     renderRows()\n    // }\n    // const renderRows = () => {\n    //     return(\n\n    //     )\n    // }\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <CustomTableCell>ID задачи</CustomTableCell>\n                        <CustomTableCell align=\"right\">Статус</CustomTableCell>\n                        <CustomTableCell align=\"right\">Название задачи</CustomTableCell>\n                        <CustomTableCell align=\"right\">Описание задачи </CustomTableCell>\n                        <CustomTableCell align=\"right\">Дата выполнения</CustomTableCell>\n                        <CustomTableCell align=\"right\">Важность</CustomTableCell>\n                        <CustomTableCell align=\"right\">Тег</CustomTableCell>\n                        <CustomTableCell align=\"right\">Действие</CustomTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {(context.items || []).map((row, index) => {\n                        return (\n                            <TableRow className={classes.row} key={index}>\n                                <CustomTableCell component=\"th\" scope=\"row\">\n                                    {row.id}\n                                </CustomTableCell>\n                                <CustomTableCell align=\"right\" ><span> {row.taskStatus}</span>  <LongMenu getStatus={getStatus.bind(this, row)} /> </CustomTableCell>\n                                <CustomTableCell align=\"right\">{row.name}</CustomTableCell>\n                                <CustomTableCell align=\"right\">{row.description}</CustomTableCell>\n                                <CustomTableCell align=\"right\">{row.date}</CustomTableCell>\n                                <CustomTableCell align=\"right\">{row.taskType}</CustomTableCell>\n                                <CustomTableCell align=\"right\">{row.taskTag}</CustomTableCell>\n                                <CustomTableCell align=\"right\" onMouseEnter={setOn} onMouseLeave={setOff}>\n                                    {renderIcon(row)}\n                                </CustomTableCell>\n                            </TableRow>\n                        )\n                    })}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nCustomizedTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedTable);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    formControl: {\n        margin: theme.spacing.unit * 3,\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`,\n    },\n});\n\nclass RadioButtonsGroup extends React.Component {\n\n    handleChange = event => {\n        this.props.getTaskType(event.target.value)\n        this.setState({ value: event.target.value });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <RadioGroup\n                        aria-label=\"Тип задачи\"\n                        name=\"Тип задачи\"\n                        className={classes.group}\n                        onChange={this.handleChange}\n                    >\n                        <FormControlLabel value=\"Срочная важная задача\" control={<Radio />} label=\"Срочная важная задача\" />\n                        <FormControlLabel value=\"Срочная неважная задача\" control={<Radio />} label=\"Срочная неважная задача\" />\n                        <FormControlLabel value=\"Не срочная важная задача\" control={<Radio />} label=\"Не срочная важная задача\" />\n                        <FormControlLabel value=\"Не срочная неважная задача\" control={<Radio />} label=\"Не срочная неважная задача\" />\n                    </RadioGroup>\n                </FormControl>\n\n            </div>\n        );\n    }\n}\n\nRadioButtonsGroup.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(RadioButtonsGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: '300px',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n});\n\nclass SimpleSelect extends React.Component {\n    state = {\n        age: '',\n        name: 'hai',\n        labelWidth: 0,\n    };\n\n    handleChange = event => {\n        this.props.getTaskStatus(event.target.value)\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <form className={classes.root} autoComplete=\"off\">\n                <FormControl className={classes.formControl}>\n                    <InputLabel shrink htmlFor=\"age-label-placeholder\">\n                        Cтатус\n                    </InputLabel>\n                    <Select\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        input={<Input name=\"age\" id=\"age-label-placeholder\" />}\n                        displayEmpty\n                        name=\"age\"\n                        className={classes.selectEmpty}\n                    >\n                        <MenuItem value=\"\"> <em>Не выбран </em> </MenuItem>\n                        <MenuItem value={'Выполняется'}>Выполняется</MenuItem>\n                        <MenuItem value={'На потом'}>На потом</MenuItem>\n                        <MenuItem value={'Выполнена'}>Выполнена</MenuItem>\n                    </Select>\n                </FormControl>\n            </form>\n        );\n    }\n}\n\nSimpleSelect.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleSelect);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport MailIcon from '@material-ui/icons/Mail';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nconst suggestions = [\n    { label: 'тег0' },\n    { label: 'тег1' },\n    { label: 'тег2' },\n    { label: 'тег3' },\n\n];\n\nfunction renderInput(inputProps) {\n    const { InputProps, classes, ref, ...other } = inputProps;\n\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nfunction renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion.label}\n            selected={isHighlighted}\n            component=\"div\"\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n\n        >\n            {suggestion.label}\n        </MenuItem>\n    );\n}\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.number,\n    index: PropTypes.number,\n    itemProps: PropTypes.object,\n    selectedItem: PropTypes.string,\n    suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\n};\n\nfunction getSuggestions(value) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0\n        ? []\n        : suggestions.filter(suggestion => {\n            const keep =\n                count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n        width: '300px',\n        margin: '0 auto',\n        padding: '10px'\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing.unit,\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing.unit * 2,\n    },\n});\n\n\nfunction IntegrationDownshift(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            <Downshift id=\"downshift-simple\">\n\n                {({ getInputProps,\n                    getItemProps,\n                    getMenuProps,\n                    highlightedIndex,\n                    inputValue,\n                    isOpen,\n                    selectedItem,\n                }) => {\n                    //передача тега родителю\n                    if (selectedItem) {\n                        props.getTaskTag(selectedItem);\n                    }\n\n                    return (\n                        <div className={classes.container}>\n                            <ListItemIcon><MailIcon /></ListItemIcon>\n                            {renderInput({\n                                fullWidth: true,\n                                classes,\n                                InputProps: getInputProps({\n                                    placeholder: 'Введите тег',\n                                }),\n                            })}\n                            <div {...getMenuProps()}>\n                                {isOpen ? (\n                                    <Paper className={classes.paper} square >\n                                        {getSuggestions(inputValue).map((suggestion, index) => {\n                                            return (renderSuggestion({\n                                                suggestion,\n                                                index,\n                                                itemProps: getItemProps({ item: suggestion.label }),\n                                                highlightedIndex,\n                                                selectedItem,\n                                            }))\n                                        }\n\n                                        )}\n                                    </Paper>\n                                ) : null}\n                            </div>\n                        </div>\n                    )\n                }}\n            </Downshift>\n            <div className={classes.divider} />\n\n        </div>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationDownshift);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\nconst SimpleSnackbar = (props) => {\n    const { open, setOpen } = props;\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={() => setOpen(false)}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Введите название</span>}\n                action={[\n                    <Button key=\"undo\" color=\"secondary\" size=\"small\"\n                        onClick={() => { setOpen(false) }}\n                    >\n                        Закрыть\n            </Button>,\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={props.classes.close}\n                        onClick={() => setOpen(false)}\n                    >\n                        <CloseIcon />\n                    </IconButton>,\n                ]}\n            />\n        </div>\n    );\n}\n\nSimpleSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleSnackbar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n    },\n    center: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    },\n    root: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(255, 255, 255, .8)'\n    }\n});\n\nclass CircularDeterminate extends React.Component {\n    state = {\n        completed: 0,\n    };\n\n    componentDidMount() {\n        this.timer = setInterval(this.progress, 20);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    progress = () => {\n        const { completed } = this.state;\n        this.setState({ completed: completed >= 100 ? 0 : completed + 1 });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <div className={classes.center}>\n                    <CircularProgress\n                        className={classes.progress}\n                        variant=\"determinate\"\n                        value={this.state.completed}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nCircularDeterminate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularDeterminate);","import React from 'react';\nimport { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport MailIcon from '@material-ui/icons/Mail';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport TaskTypes from './TaskTypes';\nimport TaskStatus from './TaskStatus';\nimport TaskTag from './TaskTag';\nimport SaveWarnings from './SaveWarning';\nimport Progress from './Progress';\n\nimport SettingsContext from '../context/SettingsContext';\n\nconst styles = theme => ({\n    root: {\n        position: 'fixed',\n        top: 5,\n        right: 5,\n    },\n    drawer: {\n        width: 400,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden'\n    },\n    title: {\n        flex: '0 0 32px'\n    },\n    drawerItem: {\n        padding: 15,\n        overflow: 'auto'\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    footer: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        padding: 30,\n        flex: '0 0 30px'\n    },\n    button: {\n        margin: '30px 80px 0 0',\n    }\n});\n\nconst Drawer = ({ classes, align = 'left' }) => {\n    const context = useContext(SettingsContext);\n    let data;\n    const [open, setOpen] = useState(false);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [date, setDate] = useState('2019-04-04');\n    const [showRadioButtons, setShow] = useState(false);\n    const [taskType, setTaskType] = useState('');\n    const [taskStatus, setTaskStatus] = useState('');\n    const [taskTag, setTaskTag] = useState('');\n    const [warning, setRenderWarning] = useState(false);\n    const [progress, setProgres] = useState(false);\n    const [id, setId] = useState(0);\n\n    const setters = {\n        id: [new Date().getTime(), setId],\n        name: ['', setName],\n        description: ['', setDescription],\n        date:['2019-04-04',setDate],\n        taskType:['', setTaskType],\n        taskStatus:['',setTaskStatus],\n        taskTag:['', setTaskTag],\n        warning:[false, setRenderWarning]\n    }\n\n    const openSidebar = (props = {}) => {\n        Object.keys(setters).forEach((name) => {\n            const setter = setters[name];\n\n            setter[1](props[name] || setter[0]);\n        });\n\n        setOpen(true);\n    }\n\n    window.editItem = openSidebar;\n\n    const renderTaskType = () => {\n        if (showRadioButtons) {\n            return (<TaskTypes getTaskType={getTaskType} />)\n        } else {\n            return '';\n        }\n    }\n\n    const getTaskType = (type) => {\n        setTaskType(type);\n    }\n\n    const getTaskStatus = (taskstatus) => {\n        setTaskStatus(taskstatus);\n    }\n\n    const getTaskTag = (tasktag) => {\n        setTaskTag(tasktag);\n    }\n\n    const renderWarning = () => {\n        return (\n            <SaveWarnings\n                setOpen={setRenderWarning}\n                open={warning}\n            />\n        )\n    }\n\n    const saveData = () => {\n        data = {id, name, description, date, taskType, taskStatus, taskTag};\n\n        context.addItem(data);\n\n        new Promise((res) => {\n            setTimeout(res, 2000);\n        }).then(savedHandler);\n    }\n\n    const saveHandler = () => {\n        if (name) {\n            setName(name);\n            setProgres(true);\n            saveData();\n        } else {\n            setRenderWarning(true);\n        }\n    }\n\n    const savedHandler = () => {\n        setProgres(false);\n        setOpen(false);\n    }\n\n    const renderProgress = () => {\n        if (progress) {\n            return (\n                <Progress />\n            )\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Button className={classes.button} variant=\"outlined\" color=\"secondary\" onClick={() => openSidebar()}>Добавить задачу</Button>\n            <SwipeableDrawer\n                anchor={align}\n                open={open}\n                onClose={() => {\n                    setRenderWarning(true);\n                }}\n                onOpen={() => openSidebar(true)}\n            >\n                <div className={classes.drawer}>\n                    <Typography\n                        className={classes.title}\n                        component=\"h5\"\n                        variant=\"h6\"\n                        align=\"center\"\n                        style={{\n                            margin: 30,\n                        }}\n                    >\n                        Новая задача\n                    </Typography>\n                    <Divider />\n                    <div className={classes.drawerItem}>\n                        <List>\n\n                            {/* название задачи */}\n                            <ListItem>\n                                <ListItemIcon><MailIcon /></ListItemIcon>\n                                <TextField\n                                    id=\"standard-name\"\n                                    label=\"Название задачи\"\n                                    className={classes.textField}\n                                    value={name}\n                                    onChange={event => {\n                                        setName(event.target.value);\n                                    }}\n                                    margin=\"normal\"\n                                />\n                            </ListItem>\n\n                            {/* описание задачи */}\n                            <ListItem>\n                                <ListItemIcon><MailIcon /></ListItemIcon>\n                                <TextField\n                                    id=\"standard-multiline-flexible\"\n                                    label=\"Описание задачи\"\n                                    multiline\n                                    rowsMax=\"5\"\n                                    value={description}\n                                    onChange={event => {\n                                        setDescription(event.target.value);\n                                    }}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                />\n                            </ListItem>\n\n                            {/* дата выполнения */}\n                            <ListItem>\n                                <ListItemIcon><MailIcon /></ListItemIcon>\n                                <TextField\n                                    id=\"date\"\n                                    label=\"Дата выполнения\"\n                                    type=\"date\"\n                                    defaultValue={date}\n                                    className={classes.textField}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={event => {\n                                        setDate(event.target.value);\n                                        setShow(true);\n                                    }}\n                                />\n\n                            </ListItem>\n\n                            {/* Тип задачи */}\n                            <ListItem>\n                                {renderTaskType()}\n                            </ListItem>\n\n                            {/* Статус задачи */}\n                            <ListItem>\n                                <ListItemIcon><MailIcon /></ListItemIcon>\n                                <TaskStatus getTaskStatus={getTaskStatus} />\n                            </ListItem>\n\n                            {/* Тег задачи */}\n                            <ListItem>\n                                <TaskTag getTaskTag={getTaskTag} />\n                            </ListItem>\n                        </List>\n                    </div>\n\n                    <Divider />\n\n                    <div className={classes.footer} >\n                        <Button variant=\"outlined\" color=\"primary\" onClick={saveHandler}>Сохранить</Button>\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={() => setOpen(false)}>Отмена</Button>\n                    </div>\n\n                    {renderProgress()}\n                </div>\n                {renderWarning()}\n            </SwipeableDrawer>\n        </div>\n    );\n};\n\nDrawer.propTypes = {\n    classes: PropTypes.object,\n    align: PropTypes.string,\n};\n\nexport default withStyles(styles)(Drawer);\n","import React, { Component } from 'react';\nimport Table from './components/Table';\nimport Drawer from './components/Drawer';\nimport './App.scss';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>Список задач</h1>\n                <Drawer />\n                <div className=\"App-Content\">\n                    <Table />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport SettingsContext from './SettingsContext';\n\nconst storage = {\n  getItem(key) {\n    if (localStorage) {\n      return localStorage.getItem(key);\n    }\n  },\n  setItem(key, value) {\n    if (localStorage) {\n      return localStorage.setItem(key, value);\n    }\n  },\n};\n\n\nconst SettingsProvider = (props) => {\n    const tableData  = JSON.parse(storage.getItem('items')) || [];\n    const [items, setItems] = useState(tableData);\n\n\n    const addItem = (item) => {\n        let newItems = [...items];\n        const sameIdIndex = newItems.findIndex((v) => v.id === item.id);\n\n        if (sameIdIndex !== -1) {\n            newItems[sameIdIndex] = item;\n        } else {\n            newItems.push(item);\n        }\n\n        setItems(newItems);\n        storage.setItem('items', JSON.stringify(newItems));\n    }\n\n    const deleteItem = (item) => {\n        const newData = tableData.filter((article) => item.id !== article.id);\n\n        setItems(newData);\n        storage.setItem('items', JSON.stringify(newData));\n    }\n\n    return (\n        <SettingsContext.Provider value={{\n            items,\n            addItem,\n            tableData,\n            deleteItem\n        }}>\n            {props.children}\n        </SettingsContext.Provider>\n  );\n};\nexport default SettingsProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport SettingsProvider from './context/SettingsProvider';\n\nReactDOM.render(\n    <SettingsProvider>\n        <App />\n    </SettingsProvider>\n    ,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}